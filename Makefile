CXX=	g++
EMXX=	em++
MKDIR=	mkdir
RM=	rm -f
RMDIR=	rm -fd

JS_DIR=			js/
SRCS_DIR=		srcs/
INC_DIR=		inc/
OBJS_DIR=		objs/
BIN_DIR=		bin/
NATIVE_DIR=		native/
WEBASM_DIR=		webasm/
RELEASE_DIR=		release/
DEBUG_DIR=		debug/

OBJS_NATIVE_DIR=	$(OBJS_DIR)$(NATIVE_DIR)
OBJS_NATIVE_RELEASE_DIR=$(OBJS_NATIVE_DIR)$(RELEASE_DIR)
OBJS_NATIVE_DEBUG_DIR=	$(OBJS_NATIVE_DIR)$(DEBUG_DIR)
OBJS_WEBASM_DIR=	$(OBJS_DIR)$(WEBASM_DIR)
OBJS_WEBASM_RELEASE_DIR=$(OBJS_WEBASM_DIR)$(RELEASE_DIR)
OBJS_WEBASM_DEBUG_DIR=	$(OBJS_WEBASM_DIR)$(DEBUG_DIR)
NATIVE_BIN_DIR=		$(BIN_DIR)
WEBASM_BIN_DIR=		$(JS_DIR)$(BIN_DIR)

# Order matters here : subfolders must be on top of their root folder, because it is the order used to delete them.
OBJS_DIRS=		$(OBJS_NATIVE_RELEASE_DIR)	\
			$(OBJS_NATIVE_DEBUG_DIR)	\
			$(OBJS_NATIVE_DIR)		\
			$(OBJS_WEBASM_RELEASE_DIR)	\
			$(OBJS_WEBASM_DEBUG_DIR)	\
			$(OBJS_WEBASM_DIR)		\
			$(OBJS_DIR)			\

BIN_DIRS=		$(NATIVE_BIN_DIR)	\
			$(WEBASM_BIN_DIR)	\

CXX_COMMON_FLAGS=	-Wall -Wextra -Werror	\
			-std=c++17		\
			-I $(INC_DIR)		\

CXX_RELEASE_FLAGS=	$(CXX_COMMON_FLAGS)	\
			-O3

CXX_DEBUG_FLAGS=	$(CXX_COMMON_FLAGS)	\
			-g3

EMXX_FLAGS=		-s WASM=1 -s USE_PTHREADS=1

LD_NATIVE_COMMON_FLAGS=	-lpthread

LD_NATIVE_RELEASE_FLAGS=$(LD_NATIVE_COMMON_FLAGS)	\
			-O3

LD_NATIVE_DEBUG_FLAGS=	$(LD_NATIVE_COMMON_FLAGS)	\
			-g3

LD_WEBASM_COMMON_FLAGS=	-s WASM=1	\
			--shared-memory	\
			-s USE_PTHREADS=1 -s PTHREAD_POOL_SIZE=1

LD_WEBASM_RELEASE_FLAGS=$(LD_WEBASM_COMMON_FLAGS) -O3

LD_WEBASM_DEBUG_FLAGS=	$(LD_WEBASM_COMMON_FLAGS) -g3


SRCS_FILES=	main.cpp    \

SRCS=   	$(addprefix $(SRCS_DIR),$(SRCS_FILES))

NATIVE_NAME=	exec

OBJS_NATIVE_RELEASE=	$(SRCS:$(SRCS_DIR)%.cpp=$(OBJS_NATIVE_RELEASE_DIR)%.o)
OBJS_NATIVE_DEBUG=	$(SRCS:$(SRCS_DIR)%.cpp=$(OBJS_NATIVE_DEBUG_DIR)%.o)
OBJS_WEBASM_RELEASE=	$(SRCS:$(SRCS_DIR)%.cpp=$(OBJS_WEBASM_RELEASE_DIR)%.o)
OBJS_WEBASM_DEBUG=	$(SRCS:$(SRCS_DIR)%.cpp=$(OBJS_WEBASM_DEBUG_DIR)%.o)
OBJS=			$(OBJS_NATIVE_RELEASE)	\
			$(OBJS_NATIVE_DEBUG)	\
			$(OBJS_WEBASM_RELEASE)	\
			$(OBJS_WEBASM_DEBUG)	\

BIN_NATIVE_RELEASE=	$(NATIVE_BIN_DIR)$(NATIVE_NAME)_release
BIN_NATIVE_DEBUG=	$(NATIVE_BIN_DIR)$(NATIVE_NAME)_debug
BIN_WEBASM_RELEASE=	$(WEBASM_BIN_DIR)$(NATIVE_NAME)_release.js
BIN_WEBASM_DEBUG=	$(WEBASM_BIN_DIR)$(NATIVE_NAME)_debug.js
RESIDUE_WEBASM_RELASE=	$(BIN_WEBASM_RELEASE:%.js=%.worker.js) $(BIN_WEBASM_RELEASE:%.js=%.wasm)
RESIDUE_WEBASM_DEBUG=	$(BIN_WEBASM_DEBUG:%.js=%.worker.js) $(BIN_WEBASM_DEBUG:%.js=%.wasm)
BINS=			$(BIN_NATIVE_RELEASE)	\
			$(BIN_NATIVE_DEBUG)	\
			$(BIN_WEBASM_RELEASE)	\
			$(BIN_WEBASM_DEBUG)	\
			$(RESIDUE_WEBASM_RELASE)\
			$(RESIDUE_WEBASM_DEBUG)	\


$(OBJS_DIR):
	$(MKDIR) $@

$(OBJS_NATIVE_DIR):		| $(OBJS_DIR)
	$(MKDIR) $@

$(OBJS_NATIVE_RELEASE_DIR):	| $(OBJS_NATIVE_DIR)
	$(MKDIR) $@

$(OBJS_NATIVE_DEBUG_DIR):	| $(OBJS_NATIVE_DIR)
	$(MKDIR) $@

$(OBJS_NATIVE_RELEASE_DIR)%.o:	$(SRCS_DIR)%.cpp | $(OBJS_NATIVE_RELEASE_DIR)
	$(CXX) $(CXX_RELEASE_FLAGS) -c $< -o $@

$(OBJS_NATIVE_DEBUG_DIR)%.o:	$(SRCS_DIR)%.cpp | $(OBJS_NATIVE_DEBUG_DIR)
	$(CXX) $(CXX_DEBUG_FLAGS) -c $< -o $@

$(OBJS_WEBASM_DIR):		| $(OBJS_DIR)
	$(MKDIR) $@

$(OBJS_WEBASM_RELEASE_DIR):	| $(OBJS_WEBASM_DIR)
	$(MKDIR) $@

$(OBJS_WEBASM_DEBUG_DIR):	| $(OBJS_WEBASM_DIR)
	$(MKDIR) $@

$(OBJS_WEBASM_RELEASE_DIR)%.o:	$(SRCS_DIR)%.cpp | $(OBJS_WEBASM_RELEASE_DIR)
	$(EMXX) $(CXX_RELEASE_FLAGS) $(EMXX_FLAGS) -c $< -o $@

$(OBJS_WEBASM_DEBUG_DIR)%.o:	$(SRCS_DIR)%.cpp | $(OBJS_WEBASM_DEBUG_DIR)
	$(EMXX) $(CXX_DEBUG_FLAGS) $(EMXX_FLAGS) -c $< -o $@


$(NATIVE_BIN_DIR):
	$(MKDIR) $@

$(BIN_NATIVE_RELEASE):	$(OBJS_NATIVE_RELEASE) | $(NATIVE_BIN_DIR)
	$(CXX) $(OBJS_NATIVE_RELEASE) -o $(BIN_NATIVE_RELEASE) $(LD_NATIVE_RELEASE_FLAGS)

$(BIN_NATIVE_DEBUG):	$(OBJS_NATIVE_DEBUG) | $(NATIVE_BIN_DIR)
	$(CXX) $(OBJS_NATIVE_DEBUG) -o $(BIN_NATIVE_DEBUG) $(LD_NATIVE_DEBUG_FLAGS)

$(WEBASM_BIN_DIR):
	$(MKDIR) $@

$(BIN_WEBASM_RELEASE):	$(OBJS_WEBASM_RELEASE) | $(WEBASM_BIN_DIR)
	$(EMXX) $(OBJS_WEBASM_RELEASE) -o $(BIN_WEBASM_RELEASE) $(LD_WEBASM_RELEASE_FLAGS)

$(BIN_WEBASM_DEBUG):	$(OBJS_WEBASM_DEBUG) | $(WEBASM_BIN_DIR)
	$(EMXX) $(OBJS_WEBASM_DEBUG) -o $(BIN_WEBASM_DEBUG) $(LD_WEBASM_DEBUG_FLAGS)


all:	$(BINS)

clean:
	$(RM) $(OBJS)
	$(RMDIR) $(OBJS_DIRS)

fclean: clean
	$(RM) $(BINS)
	$(RMDIR) $(BIN_DIRS)

re:	fclean native_release

# aliases command
native_release:	$(BIN_NATIVE_RELEASE)
native_debug:	$(BIN_NATIVE_DEBUG)
webasm_release:	$(BIN_WEBASM_RELEASE)
webasm_debug:	$(BIN_WEBASM_DEBUG)

.DEFAULT_GOAL=	native_release
